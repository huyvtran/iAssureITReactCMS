{"ast":null,"code":"var _jsxFileName = \"/home/iassure/Ref Clone/iAssureIT Website/iAssureITReactCMS/webapp/admin/src/CMS/coreAdmin/Blogs/Componant/BlogsForm/BlogsForm.js\";\nimport React, { Component } from 'react';\nimport \"./BlogsForm.css\";\nimport { Route, withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport S3FileUpload from 'react-s3';\nimport swal from 'sweetalert';\nimport PropTypes from 'prop-types';\nimport CKEditor from 'ckeditor4-react';\n\nclass BlogsForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      \"fields\": {},\n      \"errors\": {},\n      \"blogTitle\": \"\",\n      \"pageUrl\": \"\",\n      \"updateID\": \"\",\n      \"summary\": \"\",\n      \"bannerImg\": \"\",\n      \"typeOfBlog\": \"\",\n      \"imgArrayWSaws\": [],\n      \"config\": \"\",\n      \"uploadedImage\": [],\n      \"imgPath\": \"\",\n      \"imgbPath\": {},\n      \"imgInTextPath\": {},\n      \"blog1Img\": [],\n      \"blogContent\": '',\n      \"editUrl\": '',\n      \"formerrors\": {\n        \"clientName\": \" \",\n        \"clientEmail\": \" \"\n      },\n      \"editId\": this.props.match.params ? this.props.match.params.blogURL : ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.onEditorChange = this.onEditorChange.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    var editId = nextProps.match.params.id;\n\n    if (nextProps.match.params.id) {\n      this.setState({\n        editId: editId\n      });\n      this.edit(editId);\n    }\n  }\n\n  onEditorChange(evt) {\n    this.setState({\n      blogContent: evt.editor.getData()\n    });\n  }\n\n  edit(e) {\n    var pageUrl = window.location.pathname;\n    console.log(\"pageUrl in blog = \", pageUrl);\n    let a = pageUrl ? pageUrl.split('/') : \"\";\n    console.log(\"a==>\", a[3]);\n    this.setState({\n      editUrl: a[3]\n    });\n    axios.get(\"/api/blogs/get/\" + a[3]).then(response => {\n      console.log(\"===>\", response.data);\n      this.setState({\n        \"blogTitle\": response.data.blogTitle,\n        \"pageUrl\": response.data.blogURL,\n        \"summary\": response.data.summary,\n        \"typeOfBlog\": response.data.typeOfBlog,\n        \"blogContent\": response.data.blogContent,\n        \"updateID\": response.data._id,\n        \"imgbPath\": {\n          path: response.data.bannerImage.path\n        }\n      });\n    }).catch(error => {\n      console.log(\"error = \", error);\n    });\n  }\n\n  componentWillReceiveProps() {// this.edit();\n  }\n\n  componentDidMount() {\n    this.edit();\n    axios.get('/api/projectsettings/get/S3').then(response => {\n      const config = {\n        bucketName: response.data.bucket,\n        dirName: \"iOG\",\n        region: response.data.region,\n        accessKeyId: response.data.key,\n        secretAccessKey: response.data.secret\n      };\n      this.setState({\n        config: config\n      }); // console.log(\"config\",this.state.config);\n    }).catch(function (error) {\n      console.log(error);\n\n      if (error.message === \"Request failed with status code 401\") {\n        swal(\"Your session is expired! Please login again.\", \"\", \"error\");\n        this.props.history.push(\"/\");\n      }\n    }); // this.edit();\n  }\n\n  handleChange(event) {\n    event.preventDefault();\n    this.setState({\n      \"blogTitle\": this.refs.blogTitle.value,\n      \"summary\": this.refs.summary.value,\n      \"typeOfBlog\": this.refs.typeOfBlog.value,\n      \"pageUrl\": this.refs.blogTitle.value.replace(/[^a-zA-Z ]/g, \" \").toLowerCase().split(\" \").join(\"-\")\n    }); // var noSpecial = alert(this.state.blogTitle.replace(/[^a-zA-Z ]/g, \" \"));\n\n    let fields = this.state.fields;\n    fields[event.target.name] = event.target.value;\n    this.setState({\n      fields\n    });\n\n    if (this.validateForm() && this.validateFormReq()) {\n      let errors = {};\n      errors[event.target.name] = \"\";\n      this.setState({\n        errors: errors\n      });\n    }\n  }\n\n  uploadDesignImg(event) {\n    console.log(\"upload =\", event.target.files[0]);\n    var file = event.target.files[0];\n\n    if (file) {\n      var ext = file.name.split('.').pop();\n\n      if (ext == \"jpg\" || ext == \"png\" || ext == \"jpeg\" || ext == \"JPG\" || ext == \"PNG\" || ext == \"JPEG\") {\n        this.setState({\n          uploadedImage: event.target.files[0]\n        }, () => {\n          console.log(\"uploadToS3 =\", this.state.uploadedImage);\n          S3FileUpload.uploadFile(file, this.state.config).then(Data => {\n            console.log('Data.location', Data.location);\n            this.setState({\n              imgbPath: {\n                \"path\": Data.location\n              }\n            });\n          }).catch(error => {\n            console.log(error);\n          });\n        });\n      } else {\n        swal(\"Format is incorrect\", \"Only Upload images format (jpg,png,jpeg)\", \"warning\");\n        this.setState({\n          imgbPath: {\n            \"path\": \"\"\n          }\n        });\n      }\n    } else {\n      swal(\"\", \"Something went wrong\", \"error\");\n    }\n\n    let fields = this.state.fields;\n    fields[event.target.name] = event.target.value;\n    this.setState({\n      fields\n    });\n\n    if (this.validateForm() && this.validateFormReq()) {\n      let errors = {};\n      errors[event.target.name] = \"\";\n      this.setState({\n        errors: errors\n      });\n    }\n  }\n\n  uploadBlogImage(event) {\n    event.preventDefault();\n    let self = this;\n\n    if (event.currentTarget.files && event.currentTarget.files[0]) {\n      var file = event.currentTarget.files[0];\n      var newFileName = JSON.parse(JSON.stringify(new Date())) + \"_\" + file.name;\n      var newFile = new File([file], newFileName); // console.log(\"file\",newFile);\n\n      if (newFile) {\n        // console.log(\"config--------------->\",this.state.config);\n        var ext = newFile.name.split('.').pop();\n\n        if (ext == \"jpg\" || ext == \"png\" || ext == \"jpeg\" || ext == \"JPG\" || ext == \"PNG\" || ext == \"JPEG\") {\n          if (newFile) {\n            S3FileUpload.uploadFile(newFile, this.state.config).then(Data => {\n              var obj1 = {\n                imgPath: Data.location\n              };\n              var imgArrayWSaws = this.state.imgArrayWSaws;\n              imgArrayWSaws.push(obj1);\n              this.setState({\n                // workspaceImages : imgArrayWSaws\n                blog1Img: imgArrayWSaws\n              });\n            }).catch(error => {\n              console.log(\"formErrors\");\n              console.log(error);\n            }); // var objTitle={ \n            //   fileInfo :newFile\n            // }\n            // // var imgTitleArrayWS = [];\n            // imgTitleArrayWS.push(objTitle);\n            // this.setState({\n            //   imageTitleArrayWS : imgTitleArrayWS\n            // })\n            //  console.log('imgArrayWS = ',imgTitleArrayWS);\n          } else {\n            swal(\"File not uploaded\", \"Something went wrong\", \"error\");\n          }\n        } else {\n          swal(\"Please upload file\", \"Only Upload  images format (jpg,png,jpeg)\", \"warning\");\n        }\n      }\n    }\n  }\n\n  deleteBlogimage(event) {\n    event.preventDefault();\n    swal({\n      title: \"Are you sure you want to delete this image?\",\n      text: \"Once deleted, you will not be able to recover this image!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true\n    }).then(success => {\n      if (success) {\n        swal(\"Your image is deleted!\");\n        this.setState({\n          imgbPath: \"\"\n        });\n      } else {\n        swal(\"Your image is safe!\");\n      }\n    });\n  }\n\n  deleteimageWS(e) {\n    e.preventDefault();\n    var index = e.target.getAttribute('id');\n    var filePath = e.target.getAttribute('data-id');\n    var data = filePath.split(\"/\");\n    var imageName = data[4];\n    console.log(\"imageName==\", imageName);\n\n    if (index) {\n      swal({\n        title: \"Are you sure you want to delete this image?\",\n        text: \"Once deleted, you will not be able to recover this image!\",\n        icon: \"warning\",\n        buttons: true,\n        dangerMode: true\n      }).then(willDelete => {\n        if (willDelete) {\n          var array = this.state.imgArrayWSaws; // make a separate copy of the array\n\n          array.splice(index, 1);\n          swal(\"Image deleted successfully\");\n          this.setState({\n            imgArrayWSaws: array\n          });\n        } else {\n          swal(\"Your image is safe!\");\n        }\n      });\n    }\n  }\n\n  update(event) {\n    var id = this.state.updateID;\n    event.preventDefault();\n    const formValues = {\n      \"blogContent\": this.state.blogContent,\n      \"typeOfBlog\": this.state.typeOfBlog,\n      \"summary\": this.state.summary,\n      \"blogTitle\": this.state.blogTitle,\n      \"bannerImage\": this.state.imgbPath,\n      \"blogURL\": this.state.pageUrl\n    };\n    console.log(\"formValues\", formValues);\n    axios.patch('/api/blogs/patch/' + id, formValues).then(res => {\n      swal(\" Your Blog Update successfully \");\n      this.props.history.push(\"/allblogs\");\n    }).catch(error => {\n      console.log(\"error = \", error);\n    });\n  }\n\n  Submit(event) {\n    event.preventDefault();\n    const formValues = {\n      \"blogContent\": this.state.blogContent,\n      \"typeOfBlog\": this.state.typeOfBlog,\n      \"summary\": this.state.summary,\n      \"blogTitle\": this.state.blogTitle,\n      \"bannerImage\": this.state.imgbPath,\n      \"blogURL\": this.state.pageUrl\n    };\n\n    if (this.validateForm() && this.validateFormReq()) {\n      axios.post('http://iogapi.iassureit.com/api/blogs/post', formValues).then(res => {\n        console.log('res', res.data);\n        swal(\"Thank you .Your Blog Created.\");\n        this.props.history.push(\"/\" + this.state.pageUrl);\n        console.log(\"response = \", res.data);\n      }).catch(error => {\n        console.log(\"error = \", error);\n      });\n      let fields = {};\n      fields[\"blogTitle\"] = \"\";\n      fields[\"summary\"] = \"\";\n      fields[\"bannerImg\"] = \"\";\n      this.setState({\n        \"summary\": \"\",\n        \"blogTitle\": \"\",\n        \"bannerImg\": \"\",\n        \"fields\": fields\n      });\n    }\n  }\n\n  deleteBlogTextimage(event) {\n    event.preventDefault();\n    swal({\n      title: \"Are you sure you want to delete this image?\",\n      text: \"Once deleted, you will not be able to recover this image!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true\n    }).then(success => {\n      if (success) {\n        swal(\"Your image is deleted!\");\n        this.setState({\n          imgInTextPath: {\n            path: \"\"\n          }\n        });\n      } else {\n        swal(\"Your image is safe!\");\n      }\n    });\n  }\n\n  uploadInTextImg(e) {\n    console.log(\"upload =\", e.target.files[0]);\n    var file = e.target.files[0];\n    this.setState({\n      uploadedImage: e.target.files[0]\n    }, () => {\n      console.log(\"uploadToS3 =\", this.state.uploadedImage);\n      console.log(\"config\", this.state.config);\n      S3FileUpload.uploadFile(file, this.state.config).then(Data => {\n        console.log('Data.location', Data.location);\n        this.setState({\n          imgInTextPath: {\n            \"path\": Data.location\n          }\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    });\n  }\n\n  validateFormReq() {\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true;\n\n    if (!fields[\"blogTitle\"]) {\n      formIsValid = false;\n      errors[\"blogTitle\"] = \"This field is required.\";\n    }\n\n    if (!fields[\"summary\"]) {\n      formIsValid = false;\n      errors[\"summary\"] = \"This field is required.\";\n    }\n\n    if (!fields[\"bannerImg\"]) {\n      formIsValid = false;\n      errors[\"bannerImg\"] = \"This field is required.\";\n    }\n    /* if (!fields[\"panNumber\"]) {\n       formIsValid = false;\n       errors[\"panNumber\"] = \"This field is required.\";\n     }\n     if (!fields[\"addressProof\"]) {\n       formIsValid = false;\n       errors[\"addressProof\"] = \"This field is required.\";\n     }\n    */\n\n\n    this.setState({\n      errors: errors\n    });\n    return formIsValid;\n  }\n\n  validateForm() {\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true;\n\n    if (typeof fields[\"blogTitle\"] !== \"undefined\") {\n      //regular expression for email validation\n      var pattern = new RegExp(/^[a-zA-Z0-9~,&_?:!. -]+$/);\n\n      if (!pattern.test(fields[\"blogTitle\"])) {\n        formIsValid = false;\n        errors[\"blogTitle\"] = \"Please enter valid blog title.\";\n      }\n    }\n    /*  if (typeof fields[\"blogTitle\"] !== \"undefined\") {\n        if (!fields[\"blogTitle\"].match(/^[a-zA-Z0-9]$/)) {\n          formIsValid = false;\n          errors[\"blogTitle\"] = \"Please .\";\n        }\n      }*/\n\n\n    this.setState({\n      errors: errors\n    });\n    return formIsValid;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \" boxform1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-12 textAlignCenter createBlogLabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475\n      },\n      __self: this\n    }, \"Create Blog\")), React.createElement(\"form\", {\n      id: \"blogForm\",\n      className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 nopadding blogFormBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-10 col-lg-offset-1 col-md-12 col-sm-12 col-xs-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"formcontent col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480\n      },\n      __self: this\n    }, \"Blog Tittle\", React.createElement(\"span\", {\n      className: \"redFont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480\n      },\n      __self: this\n    }, \"*\")), React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"form-control nameSpaceUpper col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n      id: \"blogTitle\",\n      type: \"text\",\n      name: \"blogTitle\",\n      ref: \"blogTitle\",\n      value: this.state.blogTitle,\n      onChange: this.handleChange.bind(this),\n      placeholder: \"\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"errorMsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483\n      },\n      __self: this\n    }, this.state.errors.blogTitle))), React.createElement(\"div\", {\n      className: \"formcontent col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488\n      },\n      __self: this\n    }, \"Url\", React.createElement(\"span\", {\n      className: \"redFont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488\n      },\n      __self: this\n    }, \"*\")), React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      ref: \"pageUrl\",\n      id: \"basicPageName\",\n      value: this.state.pageUrl,\n      name: \"basicPageName\",\n      className: \"templateName col-lg-12 col-md-12 col-sm-12 col-xs-12 inputValid hinput30\",\n      onChange: this.handleChange.bind(this),\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"formcontent col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n      style: {\n        height: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497\n      },\n      __self: this\n    }, \"Blog Summary\", React.createElement(\"span\", {\n      className: \"redFont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497\n      },\n      __self: this\n    }, \"*\")), React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      className: \"form-control nameSpaceUpper form-control col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n      name: \"summary\",\n      ref: \"summary\",\n      value: this.state.summary,\n      onChange: this.handleChange.bind(this),\n      placeholder: \"\",\n      rows: \"5\",\n      id: \"comment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"errorMsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500\n      },\n      __self: this\n    }, this.state.errors.summary))), React.createElement(\"div\", {\n      className: \"formcontent col-lg-12 col-md-12 col-sm-12 col-xs-12 mt20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504\n      },\n      __self: this\n    }, \"Blog Type\", React.createElement(\"span\", {\n      className: \"redFont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504\n      },\n      __self: this\n    }, \"*\")), React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dropdown\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"form-control\",\n      id: \"sel1\",\n      ref: \"typeOfBlog\",\n      value: this.state.typeOfBlog,\n      onChange: this.handleChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508\n      },\n      __self: this\n    }, \"Regular\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509\n      },\n      __self: this\n    }, \"Premium\"))))), React.createElement(\"div\", {\n      className: \"formcontent col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"contactNumber\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515\n      },\n      __self: this\n    }, \"Banner Image\", React.createElement(\"span\", {\n      className: \"redFont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515\n      },\n      __self: this\n    }, \"*\")), React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-lg-6 col-md-6 col-xs-12  col-sm-2 marginTop17 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      className: \"noPadding\",\n      title: \"Please choose image\",\n      id: \"designImg\",\n      name: \"bannerImg\",\n      ref: \"bannerImg\",\n      onChange: this.uploadDesignImg.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"errorMsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524\n      },\n      __self: this\n    }, this.state.errors.bannerImg))), React.createElement(\"div\", {\n      className: \"col-lg-4 col-lg-offset-2 col-md-6 col-xs-12  col-sm-2 marginTop17 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529\n      },\n      __self: this\n    }, this.state.imgbPath !== \"\" && this.state.imgbPath.path ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"pull-right custFaTimes\",\n      title: \"Delete image\",\n      onClick: this.deleteBlogimage.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532\n      },\n      __self: this\n    }, \"X\"), React.createElement(\"img\", {\n      src: this.state.imgbPath.path,\n      width: \"150\",\n      height: \"100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535\n      },\n      __self: this\n    }, \" \")))), React.createElement(\"div\", {\n      className: \"formcontent col-lg-12 col-md-12 col-sm-12 col-xs-12 mt40\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"contactNumber\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541\n      },\n      __self: this\n    }, \"Insert Image\"), React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 542\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-lg-6 col-md-6 col-xs-12  col-sm-2 marginTop17 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-4  col-md-12 col-sm-12 col-xs-12 row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      className: \"noPadding\",\n      title: \"Please choose image\",\n      id: \"designImg\",\n      onChange: this.uploadInTextImg.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-lg-6 col-md-12 col-sm-12 col-xs-12 row \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"noBorder\",\n      value: this.state.imgInTextPath.path ? this.state.imgInTextPath.path : \"No file chosen\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"col-lg-4 col-lg-offset-2 col-md-6 col-xs-12  col-sm-2 marginTop17 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556\n      },\n      __self: this\n    }, this.state.imgInTextPath !== \"\" && this.state.imgInTextPath.path ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"pull-right custFaTimes\",\n      title: \"Delete image\",\n      onClick: this.deleteBlogTextimage.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559\n      },\n      __self: this\n    }, \"X\"), React.createElement(\"img\", {\n      src: this.state.imgInTextPath.path,\n      width: \"150\",\n      height: \"100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562\n      },\n      __self: this\n    }, \" \")))), React.createElement(\"div\", {\n      className: \"formcontent col-lg-12 col-md-12 col-sm-12 col-xs-12 ckbox mt20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 628\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"userName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 629\n      },\n      __self: this\n    }, \"Blog Content\", React.createElement(\"span\", {\n      className: \"redFont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 629\n      },\n      __self: this\n    }, \"*\")), React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 630\n      },\n      __self: this\n    }, React.createElement(CKEditor, {\n      data: this.state.blogContent,\n      onChange: this.onEditorChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 631\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"formcontent col-lg-3 col-md-3 col-sm-12 col-xs-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636\n      },\n      __self: this\n    }, this.state.editUrl ? React.createElement(\"button\", {\n      onClick: this.update.bind(this),\n      className: \"btn lightbluebg commentBoxbtn buttonhover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 639\n      },\n      __self: this\n    }, \"Update\") : React.createElement(\"button\", {\n      onClick: this.Submit.bind(this),\n      className: \"btn lightbluebg commentBoxbtn buttonhover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 641\n      },\n      __self: this\n    }, \"Submit\"))))));\n  }\n\n}\n\nexport default withRouter(BlogsForm);","map":{"version":3,"sources":["/home/iassure/Ref Clone/iAssureIT Website/iAssureITReactCMS/webapp/admin/src/CMS/coreAdmin/Blogs/Componant/BlogsForm/BlogsForm.js"],"names":["React","Component","Route","withRouter","axios","S3FileUpload","swal","PropTypes","CKEditor","BlogsForm","constructor","props","state","match","params","blogURL","handleChange","bind","onEditorChange","componentWillReceiveProps","nextProps","editId","id","setState","edit","evt","blogContent","editor","getData","e","pageUrl","window","location","pathname","console","log","a","split","editUrl","get","then","response","data","blogTitle","summary","typeOfBlog","_id","path","bannerImage","catch","error","componentDidMount","config","bucketName","bucket","dirName","region","accessKeyId","key","secretAccessKey","secret","message","history","push","event","preventDefault","refs","value","replace","toLowerCase","join","fields","target","name","validateForm","validateFormReq","errors","uploadDesignImg","files","file","ext","pop","uploadedImage","uploadFile","Data","imgbPath","uploadBlogImage","self","currentTarget","newFileName","JSON","parse","stringify","Date","newFile","File","obj1","imgPath","imgArrayWSaws","blog1Img","deleteBlogimage","title","text","icon","buttons","dangerMode","success","deleteimageWS","index","getAttribute","filePath","imageName","willDelete","array","splice","update","updateID","formValues","patch","res","Submit","post","deleteBlogTextimage","imgInTextPath","uploadInTextImg","formIsValid","pattern","RegExp","test","render","height","bannerImg"],"mappings":"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","sourcesContent":["import React, { Component }      from 'react';\n\nimport \"./BlogsForm.css\";\nimport {Route, withRouter} from 'react-router-dom';\nimport axios        from 'axios';\nimport S3FileUpload from 'react-s3';\n\nimport swal from 'sweetalert';\nimport PropTypes from 'prop-types';\nimport CKEditor from 'ckeditor4-react';\n\nclass BlogsForm extends Component{\nconstructor(props) {\nsuper(props);\nthis.state={\n      \"fields\"            : {},\n      \"errors\"            : {}, \n      \"blogTitle\"        : \"\",\n      \"pageUrl\"           : \"\",\n      \"updateID\"          : \"\",\n      \"summary\"         : \"\",\n      \"bannerImg\"         : \"\",\n      \"typeOfBlog\"     : \"\",\n      \"imgArrayWSaws\"     : [],\n      \"config\"            : \"\",\n      \"uploadedImage\"     : [],\n      \"imgPath\"           : \"\",\n      \"imgbPath\"          : {},\n      \"imgInTextPath\"     : {},\n      \"blog1Img\"          : [],\n      \"blogContent\"       : '',\n      \"editUrl\"           : '',\n      \"formerrors\"        :{\n          \"clientName\"    : \" \",\n          \"clientEmail\"   : \" \",\n        },\n        \"editId\"          : this.props.match.params ? this.props.match.params.blogURL : ''\n      };\n      this.handleChange = this.handleChange.bind( this );\n      this.onEditorChange = this.onEditorChange.bind( this );\n}\n\n  componentWillReceiveProps(nextProps) {\n      var editId = nextProps.match.params.id;\n      if(nextProps.match.params.id){\n        this.setState({\n          editId : editId\n        })\n        this.edit(editId);\n      }\n  }\n\n  onEditorChange( evt ) {\n      this.setState( {\n          blogContent: evt.editor.getData()\n      } );\n  }\n  edit(e){\n    \n    var pageUrl = window.location.pathname;\n      console.log(\"pageUrl in blog = \",pageUrl);\n      let a = pageUrl ? pageUrl.split('/') : \"\";\n          console.log(\"a==>\",a[3]); \n          this.setState( {\n              editUrl: a[3]\n          });\n        \n    axios\n      .get(\"/api/blogs/get/\"+a[3])\n      .then((response)=>{\n        console.log(\"===>\",response.data);\n        this.setState({\n          \"blogTitle\"     :response.data.blogTitle,\n          \"pageUrl\"       :response.data.blogURL,\n          \"summary\"       :response.data.summary,\n          \"typeOfBlog\"    :response.data.typeOfBlog,\n          \"blogContent\"   :response.data.blogContent,\n          \"updateID\"      : response.data._id,\n          \"imgbPath\"      :{\n                              path:response.data.bannerImage.path\n                            },\n        });\n      })\n      .catch((error)=>{\n         console.log(\"error = \", error);             \n      });\n\n  }\n  componentWillReceiveProps(){\n    // this.edit();\n  }\n  componentDidMount(){\n    this.edit();\n      axios\n        .get('/api/projectsettings/get/S3')\n        .then((response)=>{\n         \n          const config = {\n                            bucketName      : response.data.bucket,\n                            dirName         : \"iOG\",\n                            region          : response.data.region,\n                            accessKeyId     : response.data.key,\n                            secretAccessKey : response.data.secret,\n\n                         }\n          this.setState({\n            config : config\n          })\n          // console.log(\"config\",this.state.config);\n\n        })\n        .catch(function(error){\n          console.log(error);\n            if(error.message === \"Request failed with status code 401\")\n                {\n                     swal(\"Your session is expired! Please login again.\",\"\", \"error\");\n                     this.props.history.push(\"/\");\n                }\n        })\n           // this.edit();\n\n    }\n\n  handleChange(event){\n      event.preventDefault();\n      this.setState({\n       \n        \"blogTitle\"       :this.refs.blogTitle.value,\n        \"summary\"         :this.refs.summary.value,\n        \"typeOfBlog\"      : this.refs.typeOfBlog.value,\n\n        \"pageUrl\"         : this.refs.blogTitle.value.replace(/[^a-zA-Z ]/g, \" \").toLowerCase().split(\" \").join(\"-\"),\n      \n      });\n      // var noSpecial = alert(this.state.blogTitle.replace(/[^a-zA-Z ]/g, \" \"));\n\n      let fields = this.state.fields;\n      fields[event.target.name] = event.target.value;\n      this.setState({\n        fields\n      });\n      if (this.validateForm() && this.validateFormReq()) {\n        let errors = {};\n        errors[event.target.name] = \"\";\n        this.setState({\n          errors: errors\n      });\n    }\n     \n  }\n  uploadDesignImg(event){\n    console.log(\"upload =\",event.target.files[0]);\n    var file = event.target.files[0];\n    if(file){\n      var ext = file.name.split('.').pop();\n      if(ext==\"jpg\" || ext==\"png\" || ext==\"jpeg\" || ext==\"JPG\" || ext==\"PNG\" || ext==\"JPEG\"){\n        this.setState({\n          uploadedImage: event.target.files[0]\n          },()=>{\n          console.log(\"uploadToS3 =\",this.state.uploadedImage);\n           S3FileUpload\n            .uploadFile(file,this.state.config)\n            .then((Data)=>{\n                console.log('Data.location', Data.location);\n              this.setState({\n                imgbPath : {\n                  \"path\"    : Data.location,\n                }\n              })\n          })\n          .catch((error)=>{\n            console.log(error);\n          })\n        })\n      }else{\n        swal(\"Format is incorrect\",\"Only Upload images format (jpg,png,jpeg)\",\"warning\");\n         this.setState({\n              imgbPath : {\n                \"path\"    : \"\",\n              }\n          })\n        }\n      }else{        \n            swal(\"\",\"Something went wrong\",\"error\");\n          }\n       let fields = this.state.fields;\n    fields[event.target.name] = event.target.value;\n    this.setState({\n      fields\n    });\n    if (this.validateForm() && this.validateFormReq()) {\n      let errors = {};\n      errors[event.target.name] = \"\";\n      this.setState({\n        errors: errors\n      });\n    }\n   \n\n  }\n\nuploadBlogImage(event){\n   event.preventDefault();\n   let self = this;\n   if (event.currentTarget.files && event.currentTarget.files[0]) {\n      var file = event.currentTarget.files[0];\n      var newFileName = JSON.parse(JSON.stringify(new Date()))+\"_\"+file.name;\n      var newFile = new File([file],newFileName);\n      // console.log(\"file\",newFile);\n      if (newFile) {\n      // console.log(\"config--------------->\",this.state.config);\n        var ext = newFile.name.split('.').pop();\n        if(ext==\"jpg\" || ext==\"png\" || ext==\"jpeg\" || ext==\"JPG\" || ext==\"PNG\" || ext==\"JPEG\"){\n          if (newFile) {\n            S3FileUpload\n              .uploadFile(newFile,this.state.config)\n              .then((Data)=>{\n               \n                  var obj1={\n                    imgPath : Data.location,\n                  }\n                  var imgArrayWSaws = this.state.imgArrayWSaws;\n                  imgArrayWSaws.push(obj1);\n                  this.setState({\n                    // workspaceImages : imgArrayWSaws\n                    blog1Img : imgArrayWSaws\n                  })\n              })\n              .catch((error)=>{\n                console.log(\"formErrors\");\n                console.log(error);\n              })\n\n            // var objTitle={ \n            //   fileInfo :newFile\n            // }\n            // // var imgTitleArrayWS = [];\n            // imgTitleArrayWS.push(objTitle);\n            // this.setState({\n            //   imageTitleArrayWS : imgTitleArrayWS\n            // })\n            //  console.log('imgArrayWS = ',imgTitleArrayWS);\n\n\n          }else{        \n            swal(\"File not uploaded\",\"Something went wrong\",\"error\");\n          }\n        }else{\n          swal(\"Please upload file\",\"Only Upload  images format (jpg,png,jpeg)\",\"warning\"); \n        }\n      }\n    }\n  }\n\n  deleteBlogimage(event){\n    event.preventDefault();\n    swal({\n          title: \"Are you sure you want to delete this image?\",\n          text: \"Once deleted, you will not be able to recover this image!\",\n          icon: \"warning\",\n          buttons: true,\n          dangerMode: true,\n        })\n        .then((success) => {\n            if (success) {\n              swal(\"Your image is deleted!\");\n              this.setState({\n                imgbPath : \"\"\n              })\n            } else {\n            swal(\"Your image is safe!\");\n          }\n        });\n  }\n\n  deleteimageWS(e){\n    e.preventDefault();\n    var index = e.target.getAttribute('id');\n    var filePath = e.target.getAttribute('data-id');\n    var data = filePath.split(\"/\");\n    var imageName = data[4];\n    console.log(\"imageName==\",imageName);\n\n    if(index){\n      swal({\n            title: \"Are you sure you want to delete this image?\",\n            text: \"Once deleted, you will not be able to recover this image!\",\n            icon: \"warning\",\n            buttons: true,\n            dangerMode: true,\n          })\n          .then((willDelete) => {\n            if (willDelete) {\n              var array = this.state.imgArrayWSaws; // make a separate copy of the array\n              array.splice(index, 1);\n              swal(\"Image deleted successfully\");\n              this.setState({\n                imgArrayWSaws: array\n              });\n            }else {\n              swal(\"Your image is safe!\");\n            }\n          });\n    }\n  }\n\n\n  update(event){\n    var id = this.state.updateID;\n    event.preventDefault();\n    const formValues = {\n      \"blogContent\"         :this.state.blogContent,\n      \"typeOfBlog\"          :this.state.typeOfBlog,\n      \"summary\"             :this.state.summary,\n      \"blogTitle\"           :this.state.blogTitle,\n      \"bannerImage\"         :this.state.imgbPath,\n      \"blogURL\"             :this.state.pageUrl,\n\n\n   };\n   console.log(\"formValues\",formValues);\n    axios\n          .patch('/api/blogs/patch/'+id,formValues)\n          .then((res)=>{\n                      swal(\" Your Blog Update successfully \");\n                       this.props.history.push(\"/allblogs\");\n\n                  })\n                  .catch((error)=>{\n                    console.log(\"error = \", error);\n                  });\n  }\n  Submit(event){\n      event.preventDefault();\n      const formValues = {\n        \"blogContent\"         :this.state.blogContent,\n        \"typeOfBlog\"          :this.state.typeOfBlog,\n        \"summary\"             :this.state.summary,\n        \"blogTitle\"           :this.state.blogTitle,\n        \"bannerImage\"         :this.state.imgbPath,\n        \"blogURL\"             :this.state.pageUrl,\n         };\n     if (this.validateForm() && this.validateFormReq()) {\n      axios\n        .post('http://iogapi.iassureit.com/api/blogs/post',formValues)\n        .then((res)=>{\n          console.log('res', res.data);\n                    swal(\"Thank you .Your Blog Created.\");\n                     this.props.history.push(\"/\"+this.state.pageUrl);\n                     console.log(\"response = \", res.data);\n                })\n                .catch((error)=>{\n                  console.log(\"error = \", error);\n                });\n\n          let fields = {};\n            fields[\"blogTitle\"]        = \"\";        \n            fields[\"summary\"]          = \"\";        \n            fields[\"bannerImg\"]        = \"\";        \n            this.setState({\n                \"summary\"          : \"\",\n                \"blogTitle\"        : \"\",\n                \"bannerImg\"        : \"\",\n                \"fields\"           : fields\n              });\n      }\n\n  }\n  deleteBlogTextimage(event){\n    event.preventDefault();\n    swal({\n          title: \"Are you sure you want to delete this image?\",\n          text: \"Once deleted, you will not be able to recover this image!\",\n          icon: \"warning\",\n          buttons: true,\n          dangerMode: true,\n        })\n        .then((success) => {\n            if (success) {\n              swal(\"Your image is deleted!\");\n              this.setState({\n                imgInTextPath : {\n                  path:\"\",\n                }\n              })\n            } else {\n            swal(\"Your image is safe!\");\n          }\n        });\n  }\n  uploadInTextImg(e){\n    console.log(\"upload =\",e.target.files[0]);\n    var file = e.target.files[0];\n    this.setState({\n      uploadedImage: e.target.files[0]\n    },()=>{\n          console.log(\"uploadToS3 =\",this.state.uploadedImage);\n          console.log(\"config\",this.state.config);\n     S3FileUpload\n      .uploadFile(file,this.state.config)\n      .then((Data)=>{\n          console.log('Data.location', Data.location);\n        this.setState({\n          imgInTextPath : {\n            \"path\"    : Data.location,\n          }\n      })\n    })\n    .catch((error)=>{\n      console.log(error);\n    })\n  })\n}\n  validateFormReq() {\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true;\n    if (!fields[\"blogTitle\"]) {\n      formIsValid = false;\n      errors[\"blogTitle\"] = \"This field is required.\";\n    } \n     if (!fields[\"summary\"]) {\n      formIsValid = false;\n      errors[\"summary\"] = \"This field is required.\";\n    }   \n    if (!fields[\"bannerImg\"]) {\n      formIsValid = false;\n      errors[\"bannerImg\"] = \"This field is required.\";\n    }  \n   /* if (!fields[\"panNumber\"]) {\n      formIsValid = false;\n      errors[\"panNumber\"] = \"This field is required.\";\n    }\n    if (!fields[\"addressProof\"]) {\n      formIsValid = false;\n      errors[\"addressProof\"] = \"This field is required.\";\n    }\n*/\n    this.setState({\n      errors: errors\n    });\n    return formIsValid;\n  }\n\n  validateForm() {\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true;\n    if (typeof fields[\"blogTitle\"] !== \"undefined\") {\n      //regular expression for email validation\n      var pattern = new RegExp(/^[a-zA-Z0-9~,&_?:!. -]+$/);\n      if (!pattern.test(fields[\"blogTitle\"])) {\n        formIsValid = false;\n        errors[\"blogTitle\"] = \"Please enter valid blog title.\";\n      }\n    }\n  /*  if (typeof fields[\"blogTitle\"] !== \"undefined\") {\n      if (!fields[\"blogTitle\"].match(/^[a-zA-Z0-9]$/)) {\n        formIsValid = false;\n        errors[\"blogTitle\"] = \"Please .\";\n      }\n    }*/\n  \n    this.setState({\n      errors: errors\n    });\n    return formIsValid;\n  }\n\nrender() {\n   \nreturn (\n<div>\n  <div className=\" boxform1\">\n          <div className=\"col-lg-12 textAlignCenter createBlogLabel\"><label className=\"\">Create Blog</label></div>\n\n  <form id=\"blogForm\" className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 nopadding blogFormBox\">\n                <div className=\"col-lg-10 col-lg-offset-1 col-md-12 col-sm-12 col-xs-12\">\n                  <div className=\"formcontent col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                    <label>Blog Tittle<span className=\"redFont\">*</span></label>\n                    <div className=\"\">\n                      <input className=\"form-control nameSpaceUpper col-lg-12 col-md-12 col-sm-12 col-xs-12\" id=\"blogTitle\" type=\"text\" name=\"blogTitle\"  ref=\"blogTitle\" value={this.state.blogTitle} onChange={this.handleChange.bind(this)} placeholder=\"\" required/>\n                      <div className=\"errorMsg\">{this.state.errors.blogTitle}</div>\n\n                    </div>\n                  </div>\n                  <div className=\"formcontent col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                    <label>Url<span className=\"redFont\">*</span></label>\n                    <div className=\"\">\n                     \n                       <input type=\"text\" ref=\"pageUrl\" id=\"basicPageName\" value={this.state.pageUrl} name=\"basicPageName\"  className=\"templateName col-lg-12 col-md-12 col-sm-12 col-xs-12 inputValid hinput30\" onChange={this.handleChange.bind(this)} disabled/>\n                    </div>\n                  </div>\n                \n\n                  <div className=\"formcontent col-lg-12 col-md-12 col-sm-12 col-xs-12\" style={{height:\"auto\"}}>\n                    <label >Blog Summary<span className=\"redFont\">*</span></label>\n                    <div className=\"\">\n                      <textarea className=\"form-control nameSpaceUpper form-control col-lg-12 col-md-12 col-sm-12 col-xs-12\" name=\"summary\"  ref=\"summary\" value={this.state.summary} onChange={this.handleChange.bind(this)}  placeholder=\"\" rows=\"5\" id=\"comment\"></textarea>\n                      <div className=\"errorMsg\">{this.state.errors.summary}</div>\n                    </div>\n                  </div>\n                  <div className=\"formcontent col-lg-12 col-md-12 col-sm-12 col-xs-12 mt20\">\n                    <label htmlFor=\"email\">Blog Type<span className=\"redFont\">*</span></label>\n                    <div className=\"\">\n                    <div className=\"dropdown\">\n                    <select className=\"form-control\" id=\"sel1\" ref=\"typeOfBlog\" value={this.state.typeOfBlog} onChange={this.handleChange.bind(this)}>\n                      <option>Regular</option>\n                      <option>Premium</option>\n                    </select>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"formcontent col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                    <label htmlFor=\"contactNumber\">Banner Image<span className=\"redFont\">*</span></label>\n                    <div className=\"\">\n                      {/*<input id=\"input-b1\" name=\"input-b1\" type=\"file\" className=\"file\" data-show-preview=\"false\" onChange={this.handleChange.bind(this)} required/>*/}\n                    </div>\n                    <div className=\"col-lg-6 col-md-6 col-xs-12  col-sm-2 marginTop17 \">\n                      <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 row\">\n                          {/*<label htmlFor=\"designImg\" className=\"designLabel col-lg-12 col-md-12 col-sm-12 col-xs-12 row\">Upload</label>*/}\n                       \n                        <input type=\"file\" className=\"noPadding\" title=\"Please choose image\" id=\"designImg\" name=\"bannerImg\" ref=\"bannerImg\" onChange={this.uploadDesignImg.bind(this)} />\n                        <div className=\"errorMsg\">{this.state.errors.bannerImg}</div>\n\n                      </div>\n                    </div>\n                    <div className=\"col-lg-4 col-lg-offset-2 col-md-6 col-xs-12  col-sm-2 marginTop17 \">\n                        <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 row\">\n                        { this.state.imgbPath!==\"\" && this.state.imgbPath.path ?\n                          <div>\n                            <label className=\"pull-right custFaTimes\" title=\"Delete image\"  onClick={this.deleteBlogimage.bind(this)}>X</label>{/*data-id={this.state.imgbPath}*/}\n                            <img src={this.state.imgbPath.path} width=\"150\" height=\"100\"/>\n                          </div>\n                          : <div> </div>\n                        }\n                        </div>\n                      </div>\n                    </div>\n                     <div className=\"formcontent col-lg-12 col-md-12 col-sm-12 col-xs-12 mt40\">\n                      <label htmlFor=\"contactNumber\">Insert Image</label>\n                      <div className=\"\">\n                        {/*<input id=\"input-b1\" name=\"input-b1\" type=\"file\" className=\"file\" data-show-preview=\"false\" onChange={this.handleChange.bind(this)} required/>*/}\n                      </div>\n                      <div className=\"col-lg-6 col-md-6 col-xs-12  col-sm-2 marginTop17 \">\n                        <div className=\"col-lg-4  col-md-12 col-sm-12 col-xs-12 row\">\n                            {/*<label htmlFor=\"designImg\" className=\"designLabel col-lg-12 col-md-12 col-sm-12 col-xs-12 row\">Upload</label>*/}\n                         \n                          <input type=\"file\" className=\"noPadding\" title=\"Please choose image\" id=\"designImg\" onChange={this.uploadInTextImg.bind(this)} />\n                        </div>\n                         <div className=\"col-lg-6 col-md-12 col-sm-12 col-xs-12 row \">\n                          <input type=\"text\" className=\"noBorder\" value={this.state.imgInTextPath.path?this.state.imgInTextPath.path : \"No file chosen\"}/>\n                        </div>\n                      </div>\n                      <div className=\"col-lg-4 col-lg-offset-2 col-md-6 col-xs-12  col-sm-2 marginTop17 \">\n                          <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 row\">\n                          { this.state.imgInTextPath!==\"\" && this.state.imgInTextPath.path ?\n                            <div>\n                              <label className=\"pull-right custFaTimes\" title=\"Delete image\"  onClick={this.deleteBlogTextimage.bind(this)}>X</label>{/*data-id={this.state.imgbPath}*/}\n                              <img src={this.state.imgInTextPath.path} width=\"150\" height=\"100\"/>\n                            </div>\n                            : <div> </div>\n                          }\n                          </div>\n                      </div>\n                    </div>\n                  {/*  <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 compForm compinfotp\">\n                      {this.state.blog1Img==null?\n                        null\n                      :\n                        this.state.blog1Img.map((data,index)=>{\n                          return(\n                                  <div className=\"col-lg-4 col-md-4 col-sm-12 col-xs-12 row\">\n                                    <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 row\">\n                                      <h5 className=\"h5Title col-lg-12 col-md-12 col-sm-12 col-xs-12\">Blog Image {index+1}</h5>\n                                    </div>\n                                    <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 \">\n                                      <div className=\"imgcss\" key={index}>\n                                        <label id={index} className=\"pull-right custFaTimes\" title=\"Delete image\" data-id={data.imgPath} onClick={this.deleteimageWS.bind(this)}>X</label>\n                                        <img className=\"img-responsive\" src={data.imgPath}/>\n                                      </div>\n                                    </div>\n                                  </div>\n                                )\n                        })\n                      }\n                  {this.state.blog1Img.length<=0?\n                    <div className=\"col-lg-4 col-md-4 col-sm-12 col-xs-12 row padTopC\">\n                      <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 row\">\n                        <h5 className=\"h5Title col-lg-12 col-md-12 col-sm-12 col-xs-12\">Add Blog Images <span className=\"astrick\">*</span></h5>\n                      \n                      </div>\n                      <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 \">\n                        <div className=\"clr_k \">\n                          <div className=\"col-lg-offset-1 col-lg-2 col-md-12 col-sm-12 col-xs-12 hand_icon\">\n                            <img src=\"/images/file_upload.png\" width=\"50\"/>\n                          </div>\n                          <div  className= \"col-lg-12 col-md-12 col-sm-12 col-xs-12 text-center below_text\">\n                           <b className=\"text_k11\"></b>\n                           <span className=\"under_ln\">Choose Blog Images</span>\n                          </div>    \n                          <input  type=\"file\" title=\"Click to attach file\" multiple name=\"userPic\" onChange={this.uploadBlogImage.bind(this)} ref=\"workspaceImg\"  className=\"form-control click_input\" id=\"upload-file2\" />\n                        </div>\n                      </div>\n                      <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 imgdetails\">(max size: 1 Mb, Format: JPEG, jpg, png)</div>\n                    </div>\n                  :\n                    <div className=\"col-lg-4 col-md-4 col-sm-12 col-xs-12 row padTopC\">\n                      <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 row\">\n                        <h5 className=\"h5Title col-lg-12 col-md-12 col-sm-12 col-xs-12\">Add Images <span className=\"astrick\">*</span></h5>\n                      </div>\n                      <div className=\"col-lg-6 col-md-12 col-sm-12 col-xs-12 \">\n                        <div className=\"clr_k\" style={{height:\"120px\"}}>\n                          <div className=\"col-lg-offset-1 col-lg-2 col-md-12 col-sm-12 col-xs-12 hand_icon1\">\n                            <img src=\"/images/file_upload.png\" width=\"50\"/>\n                          </div>\n                          <div  className= \"col-lg-offset-1 col-lg-10 col-md-10 col-sm-10 col-xs-10 below_text\">\n                           <b className=\"text_k11\"></b>\n                           <span className=\"text-center under_ln\">Choose another image</span>\n                          </div>    \n                          <input  type=\"file\" title=\"Click to attach file\" multiple name=\"userPic\" onChange={this.uploadBlogImage.bind(this)} ref=\"workspaceImg\"  className=\"form-control click_input\" id=\"upload-file2\" />\n                        </div>\n                      </div>\n                    </div>\n                }\n                </div>*/}\n                \n                  <div className=\"formcontent col-lg-12 col-md-12 col-sm-12 col-xs-12 ckbox mt20\">\n                    <label htmlFor=\"userName\">Blog Content<span className=\"redFont\">*</span></label>\n                    <div className=\"\">\n                      <CKEditor\n                        data={this.state.blogContent}\n                        onChange={this.onEditorChange} />\n                      </div>\n                  </div>\n                  <div className=\"formcontent col-lg-3 col-md-3 col-sm-12 col-xs-12\">\n                    {\n                        this.state.editUrl ?\n                        <button onClick={this.update.bind(this)} className=\"btn lightbluebg commentBoxbtn buttonhover\">Update</button>\n                        :\n                        <button onClick={this.Submit.bind(this)}  className=\"btn lightbluebg commentBoxbtn buttonhover\">Submit</button>\n                      }\n                  </div>\n                </div>\n    </form>\n    </div>\n</div>\n);\n}\n}\nexport default withRouter(BlogsForm);\n\n"]},"metadata":{},"sourceType":"module"}